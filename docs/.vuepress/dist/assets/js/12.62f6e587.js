(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{429:function(a,v,t){"use strict";t.r(v);var _=t(2),r=Object(_.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[a._v("#")]),a._v(" JAVA")]),a._v(" "),v("h4",{attrs:{id:"java类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java类型"}},[a._v("#")]),a._v(" Java类型")]),a._v(" "),v("p",[a._v("byte(位)、short(短整数)、int(整数)、long(长整数)、float(单精度)、double(双精度)、char(字符)和boolean(布尔值)。")]),a._v(" "),v("p",[a._v("大小对比")]),a._v(" "),v("p",[a._v("byte < short < int < long < float < double")]),a._v(" "),v("h4",{attrs:{id:"scanner-键盘录入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#scanner-键盘录入"}},[a._v("#")]),a._v(" Scanner 键盘录入")]),a._v(" "),v("p",[a._v("​                        (注：只能输入整数类型):")]),a._v(" "),v("p",[a._v("​                        1）. 导入import java.util.Scanner;")]),a._v(" "),v("p",[a._v("​                        2）. 创建对象Scanner sc = new Scanner(System.in);")]),a._v(" "),v("p",[a._v("​                        3）. 接受数据sc.nextInt()")]),a._v(" "),v("h4",{attrs:{id:"java运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java运算符"}},[a._v("#")]),a._v(" java运算符")]),a._v(" "),v("p",[a._v("+，-，*，/，%")]),a._v(" "),v("p",[a._v("+，-，* 小数时有可能不精确")]),a._v(" "),v("p",[a._v("/ 整除参与计算获得是整数  小数参与计算有可能不精确")]),a._v(" "),v("p",[a._v("% 取模，取余")]),a._v(" "),v("p",[a._v("数值拆分：")]),a._v(" "),v("p",[a._v("​                  1）. 个位：数值%10")]),a._v(" "),v("p",[a._v("​                  2）. 十位：数值 /10 % 10")]),a._v(" "),v("p",[a._v("​                  3）. 百位：数值 / 100 % 10")]),a._v(" "),v("p",[a._v("​                   ..... 以此类推")]),a._v(" "),v("p",[a._v("隐式转换规则：")]),a._v(" "),v("p",[a._v("​         1）.取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。")]),a._v(" "),v("p",[a._v("​         2）.byte short char 三种类型的数据再运算的时候，都会直接提升为int，然后再进行运算")]),a._v(" "),v("p",[a._v("强制转换规则:")]),a._v(" "),v("p",[a._v("​           1）. 不允许取值范围大的值给取值范围小的 如果需要这么做使用强转")]),a._v(" "),v("p",[a._v("​           2）. int a = (int) b 直接（）内部写上类型")]),a._v(" "),v("p",[a._v("String 转其他类型")]),a._v(" "),v("p",[a._v("​          例如：int a = 0； String b  = a + “”； 其他类型亦是如此")]),a._v(" "),v("p",[a._v("其他类型转String")]),a._v(" "),v("p",[a._v("​                    String a = “123”；")]),a._v(" "),v("p",[a._v("​          例如：int a =  Integer.parseInt(a)")]),a._v(" "),v("p",[a._v("​                      double a = Double.parseDouble(a)")]),a._v(" "),v("p",[a._v("​                      float a = Float.parseFloat(a)")]),a._v(" "),v("p",[a._v("​                      long a =  Long.parseLong(a)")]),a._v(" "),v("p",[a._v("​                      byte a =  Byte.parseByte(a)")]),a._v(" "),v("p",[a._v('​                      boolean a =  Boolean.parseBoolean("true")')]),a._v(" "),v("p",[a._v("​                      short a = Short.parseShort(a)")]),a._v(" "),v("h4",{attrs:{id:"java进制转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java进制转换"}},[a._v("#")]),a._v(" java进制转换")]),a._v(" "),v("p",[a._v("​         2进制 8进制 10进制 16进制")]),a._v(" "),v("p",[a._v("​        2进制转其他 基数乘"),v("em",[a._v("进制数")]),a._v("的权数次幂")]),a._v(" "),v("p",[a._v("​        10进制转其他 用根号除进制数取余数并倒叙排列")]),a._v(" "),v("h4",{attrs:{id:"java逻辑运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java逻辑运算符"}},[a._v("#")]),a._v(" Java逻辑运算符")]),a._v(" "),v("p",[a._v("​        &&短路与并且 || 短路或者 ^异或 （判断两边相同为false 不同为true） ！取反")]),a._v(" "),v("h4",{attrs:{id:"java源码-反码-补码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java源码-反码-补码"}},[a._v("#")]),a._v(" Java源码，反码，补码    "),v("img",{attrs:{src:"C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220812145639908.png",alt:"image-20220812145639908"}})]),a._v(" "),v("p",[a._v("计算机一个字节是-128 ~ +127")]),a._v(" "),v("p",[a._v("​")])])}),[],!1,null,null,null);v.default=r.exports}}]);